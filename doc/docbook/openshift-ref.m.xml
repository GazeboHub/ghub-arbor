<!DOCTYPE reference [

<!ENTITY % project.ent SYSTEM "project.ent">
%project.ent;

]>
<reference
    xmlns="http://docbook.org/ns/docbook"
    version="ghub-docbook-1.0"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xml:id="ref.openshift"
    xmlns:m="http://ghub.sourceforge.net/ns/model"
    xmlns:mpro="http://ghub.sourceforge.net/ns/model-profile"
    mpro:s="http://www.omg.org/spec/S/20070801/S%202.0%20UML%202%20Profile.xmi"
    >
  <info>
    <title>&p; OpenShift Reference</title>
  </info>
  <!--

Note that this document describes part of a way to loosely couple a DocBook XML documemt to the S metamodel's UML profile, as in developing an approach for a combined document-driven and model-driven design and engineering practice.

TO DO:

* Continue expanding on this document -  both in its content and its integration with S - with regards to the design of a documentstion process and toolchain incorporating DocBook XML and optionally, integrating with project-management web services (cf. Jenkins CI)

* Develop XSL stylesheets for producting a S model of items denoted in the individual refentry sections of thism document (indefinite timeframe) and for integrating that model with the generated DocBook documentation

  -->

  <refentry xml:id="r.rhc" m:refclass="s:ToolDefinition">
    <refnamediv>
      <refname><command>rhc</command></refname>
      <refpurpose></refpurpose>
      <refclass>Tool Definition</refclass>
      <m:attribute name="s:managedWorkProduct" xref="r.openShiftAccount"/>
    </refnamediv>
  </refentry>

  <refentry xml:id="r.openShiftAccount" m:refclass="s:WorkProductDefinition">
    <refnamediv>
      <refname><productname>OpenShift</productname> Account</refname>
      <refpurpose></refpurpose>
      <refclass>Work Product Definition</refclass>
    </refnamediv>
  </refentry>

  <refentry xml:id="r.openShiftClientToolsInstall" m:refclass="s:TaskDefinition">
    <refnamediv>
      <refname>Install <productname>OpenShift</productname> Online Cient
      Tools</refname>
      <refpurpose>Developer Task</refpurpose>
      <refclass>Task Definition</refclass>
      <!-- pevious: r.installRuby, r.installGit -->

      <!--     <m:attribute name="s:usedTool" xref="r.rhc"/> -->
      <!--   <m:attribute name="s:requiredQualification" xref="r.techDocAuthor"/> -->
    </refnamediv>
  </refentry>


  <refentry xml:id="r.installRuby" m:refclass="s:TaskDefinition">
    <!-- not so much a tool definition as much as a task definition -->
    <refnamediv>
      <refname>Install <productname>Ruby</productname> and
      <productname>RubyGems</productname></refname>
      <refpurpose></refpurpose>
      <refclass>Task Definition</refclass>
    </refnamediv>
    <refsect1>
      <title>Summary</title>

      <refsect2>
	<title>Installing <productname>Ruby</productname> on
	<productname>Linux</productname> Platforms</title>

	<para>
	  The process for installing
	  <productname>Ruby</productname> on the
	  <productname>Linux</productname>
	  platform will depend on the nature of the
	  <productname>Linux</productname>
	  <glossterm>distribution</glossterm> in use on the
	  <glossterm>host</glossterm>
	  <glossterm>machine</glossterm>. Typically, a
	  <productname>Linux</productname>
	  <glossterm>distribution</glossterm> will feature an
	  integrated <glossterm>package manager</glossterm>, and a
	  <glossterm>graphical user interface</glossterm> for
	  accessing that <glossterm>package manager</glossterm>,
	  whether via a <glossterm>command line</glossterm>
	  <glossterm>terminal</glossterm> or alternately,
	  a graphical <glossterm>desktop</glossterm>  interface.
	</para>

	<refsect3>
	  <title><productname>Debian</productname>:
	  <symbol>ruby</symbol> Virtual Package</title>

	  <para>
	    A <glossterm>virtual package</glossterm>
	    named <symbol>ruby-interpreter</symbol> is available
	    on <productname>Debian</productname>
	    <productname>Linux</productname>. The
	    <symbol>ruby-interpreter</symbol> <glossterm>virtual
	    package</glossterm>
	    is <glossterm>provided</glossterm> by any
	    version-named package in the <glossterm>package
	    repository</glossterm>providing a
	    <productname>Ruby</productname>
	    <glossterm>interpreter</glossterm>.
	  </para>

	  <para>
	    An alternate
	    <glossterm>virtual package</glossterm> is available, named
	    <symbol>ruby-full</symbol>, such that effectively
	    depends on a broader set of packages for the
	    <productname>Ruby</productname> platform.
	  </para>

	  <para>Additionally, the <symbol>rubygems</symbol> package
	  should be installed &mdash; optionally along with
	  <symbol>rubygems-doc</symbol> &mdash;   as to be able to
	  install the <symbol>rhc</symbol> gem for
	  <productname>Ruby</productname>, via the
	  <command>gem</command> command. Note, however, that the
	  <symbol>rubygems</symbol> package may depend on a specific
	  version of <productname>Ruby</productname>, such that may be
	  older than the most recently released version. There is also
	  the <symbol>ruby-switch</symbol> package, for developing on
	  mutliple versions of the <productname>Ruby</productname>
	  interpreter.</para>

	  <para>Lastly, the package,
	  <glossterm>rubygems-integration</glossterm> would be
	  recommended, as in order to ensure that
	  <productname>Debian</productname> packaged
	  <productname>Ruby</productname> components, when installed,
	  will be visible to <productname>RubyGems</productname>.</para>


	  <programlisting>sudo aptitude install rubygems rubygems-doc \
	  rubygems-integration ruby-switch</programlisting>

	</refsect3>
      </refsect2>

      <refsect2>
	<title>Installing <productname>Ruby</productname> on
	<productname>Apple OS X</productname> Platforms</title>
	<para>
	  On the <productname>OS X</productname> platform, it may be
	  recommended to use a package management system unique to
	  <productname>Ruby</productname>, such as <productname
	  xlink:href="https://rvm.io/rvm">RVM</productname> or
	  <productname
	      xlink:href="https://github.com/sstephenson/rbenv"
	      >rbenv</productname>.
	  Alternately,
	  the <productname
	  xlink:href="http://mxcl.github.com/homebrew/"
	  >Homebrew</productname> package manager
	  can be used to install <productname>Ruby</productname> on
	  <productname>OS X</productname>.
	</para>
      </refsect2>

	<refsect2>
	  <title>Installing <productname>Ruby</productname> on
	  <productname>Microsoft Windows</productname>
	  Platforms</title>

	  <para>
	    Refer to <link
	    xlink:href="http://rubyinstaller.org/"
	    ><productname>RubyInstaller</productname>
	    for <productname>Windows</productname><citation><xref
	    linkend="b.installRuby.dlRuby"/></citation>. (Note that
	    <productname>RubyGems</productname> is distributed within
	    <productname>RubyInstaller</productname><citation><xref
	    linkend="b.installRuby.ari"/></citation>)
	  </para>
	</refsect2>
      </refsect1>

      <refsect1>
	<title>Works Referenced</title>
	<bibliolist>

	  <biblioentry xml:id="b.installRuby.dlRuby" xreflabel="DLRuby">
	    <citetitle
		xlink:href="https://www.ruby-lang.org/en/downloads/"
		>Download Ruby</citetitle>
	    <publisher><publishername
			   xlink:href="http://www.ruby-lang.org/"
			   >Ruby Community</publishername></publisher>
	    <bibliomisc>accessed 8 October, 2013</bibliomisc>
	  </biblioentry>

	  <biblioentry xml:id="b.installRuby.ari" xreflabel="ARI">
	    <citetitle
		xlink:href="http://rubyinstaller.org/about"
		>About RubyInstaller</citetitle>
	    <publisher><publishername
			   >RubyInstaller Contributors</publishername></publisher>
	    <bibliomisc>accessed 8 October, 2013</bibliomisc>
	  </biblioentry>

	  <biblioentry xml:id="b.installRuby.ctig" xreflabel="CTIG">
	    <citetitle>Client Tools Installation Guide</citetitle>
	    <publisher><publishername
			   xlink:href="https://access.redhat.com/"
			   >Red Hat Customer Portal</publishername></publisher>
	    <bibliomisc>accessed 8 October, 2013</bibliomisc>
	  </biblioentry>

	  <biblioentry xml:id="b.installRuby.iorct" xreflabel="IORCT">
	    <citetitle
		xlink:href="https://www.openshift.com/developers/rhc-client-tools-install"
		>Installing OpenShift RHC Client Tools</citetitle>

	    <publisher><publishername>Red Hat, Inc</publishername></publisher>
	    <bibliomisc>accessed 8 October, 2013</bibliomisc>
	  </biblioentry>
	</bibliolist>
      </refsect1>
    </refentry>

    <refentry xml:id="r.rubyInstallation" m:refclass="s:WorkProductDefinition">
      <refnamediv>
	<refname><productname>Ruby</productname> Installation</refname>
	<refpurpose></refpurpose>
	<refclass>Work Product Definition</refclass>
      </refnamediv>
    </refentry>


  </reference>